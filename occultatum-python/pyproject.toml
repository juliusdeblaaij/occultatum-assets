[project]
name = "occultatum"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
requires-python = ">=3.11"
dependencies = [
    "python-dotenv>=1.1.1",
    "agentpy>=0.1.5",
    "einops==0.7.0",
    "fastapi[standard]>=0.116.1",
    "folium>=0.20.0",
    "geopandas>=1.1.1",
    "geopolars>=0.1.0a4",
    "huggingface-hub>=0.17.3",
    "ipython>=9.4.0",
    "matplotlib>=3.10.3",
    "miniopy-async>=1.23.2",
    "numpy==2.0.0",
    "omegaconf==2.3.0",
    "onnxruntime>=1.22.1",
    "opencv-contrib-python>=4.12.0.88",
    "pillow>=11.3.0",
    "polars>=1.31.0",
    "pymcubes>=0.1.6",
    "rasterio>=1.4.3",
    "rembg>=2.0.67",
    "seaborn>=0.13.2",
    "torch>=2.7.1",
    "torchvision>=0.22.1",
    "transformers==4.35.0",
    "trimesh==4.7.0",
]

[dependency-groups]
dev = [
    "polylith-cli>=1.30.1",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build]
dev-mode-dirs = ["components", "bases", "development", "."]

[tool.uv.workspace]
members = [
    "development",
]

[tool.pyright]
pythonVersion = "3.11"
include = ["components", "bases"]

[tool.polylith.bricks]
"bases/occultatum/artifact_to_3d_cli" = "occultatum/artifact_to_3d_cli"
"components/occultatum/artifact_to_3d" = "occultatum/artifact_to_3d"
"components/occultatum/crop_image_to_foreground" = "occultatum/crop_image_to_foreground"
"components/occultatum/isolate_artifact" = "occultatum/isolate_artifact"
"components/occultatum/image_to_glb" = "occultatum/image_to_glb"
"components/occultatum/triposr_model" = "occultatum/triposr_model"
"components/occultatum/tsr" = "occultatum/tsr"
"bases/occultatum/artifact_to_3d_api" = "occultatum/artifact_to_3d_api"
"components/occultatum/paleo" = "occultatum/paleo"
"components/occultatum/simple_object_storage" = "occultatum/simple_object_storage"
"components/occultatum/romfarms" = "occultatum/romfarms"

[[tool.uv.index]]
name = "pytorch-cpu"
url = "https://download.pytorch.org/whl/cpu"
explicit = true

[tool.uv.sources]
torch = [
  { index = "pytorch-cpu" },
]
torchvision = [
  { index = "pytorch-cpu" },
]
